#################################################
###   (C) 2021, DJPicasso				      ###
###   LBS : OpenWeatherMap Forecast Onecall   ###
###   Datum: 12.05.2024                       ###
#################################################
# 
# Update API 3.0: 12.05.2024
# Initialer Aufbau: 23.11.2021
#################################################
## Baustein unterstützt die Onecall 3.0 - Abfrage bei OpenWeatherMap
## Version: 3.0
#################################################
## Copyright © 2021, DJPicasso, All rights reserved.
#################################################
#
#5000|"Text"|Remanent(1/0)|Anz.Eingänge|.n.|Anzahl Ausgänge|.n.|.n.
#5001|Anzahl Eingänge|Ausgänge|Offset|Speicher|Berechnung bei Start
#5002|Index Eingang|Default Wert|0=numerisch 1=alphanummerisch
#5003|Speicher|Initwert|Remanent
#5004|ausgang|Initwert|runden binär (0/1)|typ (1-send/2-sbc)|0=numerisch 1=alphanummerisch
#5012|abbruch bei bed. (0/1)|bedingung|formel|zeit|pin-ausgang|pin-offset|pin-speicher|pin-neg.ausgang

#################################################
### 5000 Definition für HS-Experte
#################################################
# 5000|Bezeichnung|Remanent|Anz.Eingänge|.n.|Anzahl Ausgänge|.n.
#    Bezeichnung
#    |               		   	    Remanent
#    |     	     		       	    | Anz.Eingänge|.n.
#    |               		            | | Anzahl Ausgänge|.n.
#    | 				            | |                      
5000|"Wetter\OpenWeatherMap Onecall 3.0 (12936)"|0|5|"E1 Text"|"E2 Position"|"E3 current=1/hour=2/day=3"|"E4 Format: A1"|"E5 Format SA/SU/MA/MU"|34|"A1 Datum/Zeit"|"A2 Sonnenaufgang"|"A3 Sonnenuntergang"|"A4 Temperatur (1/2)"|"A5 gefühlte Temp. (1/2)"|"A6 Luftdruck hPa"|"A7 Luftfeuchtigkeit %"|"A8 Athmosph. Temp."|"A9 UV Index"|"A10 Bewölkung %"|"A11 Sicht m (1/2)"|"A12 Windgeschwindigkeit m/s"|"A13 Windrichtung °"|"A14 Windböen m/s"|"A15 IconID"|"A16 Text-Main"|"A17 Beschreibung"|"A18 Icon"|"A19 Regenrisiko (2/3)"|"A20 Mondaufgang (3)"|"A21 Monduntergang (3)"|"A22 Mond-Phase (3)"|"A23 Temperatur Morgens (3)"|"A24 Temperatur Mittags (3)"|"A25 Temperatur Abends (3)"|"A26 Temperatur Nachts (3)"|"A27 Temperatur min. (3)"|"A28 Temperatur max. (3)"|"A29 Temperatur Morgens gefühlt (3)"|"A30 Temperatur Mittags gefühlt (3)"|"A31 Temperatur Abends gefühlt (3)"|"A32 Temperatur Nachts gefühlt (3)"|"A33 Regen"|"A34 Schnee"|"V3.02"

#################################################
### 5001 Definition des Bausteins
#################################################
# 5001|Anzahl Eingänge|Ausgänge|Zeitspeicher|Speicher|Berechnung bei Init
#    Anzahl Eingänge
#    | Ausgänge
#    | |  Zeitspeicher
#    | |  | Speicher
#    | |  | | Berechnung bei Init
#    | |  | | |
5001|5|34|0|20|0

#################################################
### 5002 Definition der Eingänge EN[x]
#################################################
# 5002|Index Eingang|Default Wert|Datenformat 0=numerisch 1=alphanummerisch
#    Index Eingang
#    | Default Wert
#    | |  Datenformat
#    | |  |
5002|1|""|1			# E1 - Text
5002|2|0 |0			# E2 - Position
5002|3|1 |0			# E3 - Liste:	1=current, 2=hourly, 3=daily 
5002|4|"%d.%m.%Y %H:%M"|1	# E4 - Text
5002|5|"%H:%M"|1		# E5 - Text



#################################################
### 5003|Speicher|Initwert|Remanent
#################################################
# 5003|Speicher|Default Wert|Remanent
#    Speicher
#    | Default Wert
#    | | Remanent
#    | | |
5003|1|""|0	# Speicher S1 1. Trennung
5003|2|""|0	# Speicher S2 2. Trennung
5003|3|""|0	# Speicher 
5003|4|""|0	# Speicher 
5003|5|""|0	# Speicher 
5003|6|""|0	# Speicher 
5003|7|""|0	# Speicher 
5003|8|""|0	# Speicher 
5003|9|""|0	# Speicher 
5003|10|""|0	# Speicher 
5003|11|""|0	# Speicher 
5003|12|""|0	# Speicher 
5003|13|""|0	# Speicher 
5003|14|""|0	# Speicher 
5003|15|""|0	# Speicher 
5003|16|""|0	# Speicher 
5003|17|""|0	# Speicher 
5003|18|""|0	# Speicher 
5003|19|""|0	# Speicher 
5003|20|""|0	# Speicher 

#################################################
### 5004 Definition der Ausgänge AN[x]
#################################################
# 5004|Index Ausgang|Initwert|Runden binär|Typ (1-send/2-sbc)|Datenformat 0=numerisch 1=alphanummerisch
#    Index Ausgang
#    | Initwert
#    | | Runden binär
#    | | | Typ
#    | | | | Datenformat
#    | | | | |
5004|1|""|0|1|1 #A1
5004|2|""|0|1|1 #A2
5004|3|""|0|1|1 #A3
5004|4|0|0|1|0 #A4
5004|5|0|0|1|0 #A5
5004|6|0|0|1|0 #A6
5004|7|0|0|1|0 #A7
5004|8|0|0|1|0 #A8
5004|9|0|0|1|0 #A9
5004|10|0|0|1|0 #A10
5004|11|0|0|1|0 #A11
5004|12|0|0|1|0 #A12
5004|13|0|0|1|0 #A13
5004|14|0|0|1|0 #A14
5004|15|0|0|1|0 #A15
5004|16|""|0|1|1 #A16
5004|17|""|0|1|1 #A17
5004|18|""|0|1|1 #A18
5004|19|0|0|1|0 #A19
5004|20|""|0|1|1 #A20
5004|21|""|0|1|1 #A21
5004|22|0|0|1|0 #A22
5004|23|0|0|1|0 #A23
5004|24|0|0|1|0 #A24
5004|25|0|0|1|0 #A25
5004|26|0|0|1|0 #A26
5004|27|0|0|1|0 #A27
5004|28|0|0|1|0 #A28
5004|29|0|0|1|0 #A29
5004|30|0|0|1|0 #A30
5004|31|0|0|1|0 #A31
5004|32|0|0|1|0 #A32
5004|33|0|0|1|0 #A33
5004|34|0|0|1|0 #A34

#################################################
### 5012 Definition der Formeln
#################################################
# 5012|Ende nach Ausführen|Bedingung|Formel|Zeitformel|Ausgang|Zeitspeicher|Speichervariable|Negierter Ausgang
#    Ende nach Ausführen
#    | Bedingung
#    | |									 Formel
#    | |									 |								Zeitformel
#    | |									 |								| 	 Ausgang
#    | |									 |								| 	 | Zeitspeicher
#    | |									 |								| 	 | | Speichervariable
#    | |									 |								| 	 | | | Negierter Ausgang	
#    | |									 |								| 	 | | | |
# Eintrag für HS-Insight
5012|0|"EI"|"setattr(pItem.LogikItem,'LOGIKVERSION','V1.23'),setattr(pItem.LogikItem,'LOGIKNAME','OpenWeatherMap Onecall V3.0')"|""|0|0|0|0

# Text zerlegen in eine Liste von Dictionaries
5012|0|"(EC[1] or EC[2] or EC[3])"		|"__import__('json').loads(EN[1])"								|""	|0|0|1|0

# Speicher für die ausgewählte Datenstruktur (current, hourly oder daily)
5012|0|"(EN[3]==1)"				|"SN[1]['current']"										|""	|0|0|2|0
5012|0|"(EN[3]==2)"				|"SN[1]['hourly']" 										|""	|0|0|2|0
5012|0|"(EN[3]==3)"				|"SN[1]['daily']"										|""	|0|0|2|0

# Speicher für den ausgewählten Eintrag
5012|0|"(EN[3]==1)"				|"SN[2]"											|""	|0|0|3|0
5012|0|"(EN[3] in (2,3))"			|"SN[2][EN[2]]"											|""	|0|0|3|0

# dt
5012|0|"(EN[3] in (1,2,3))"			|"__import__('datetime').datetime.fromtimestamp(int(SN[3]['dt'])).strftime(EN[4])"		|""	|1|0|0|0

# current/daily -> sunrise
5012|0|"(EN[3] in (1,3))"			|"__import__('datetime').datetime.fromtimestamp(int(SN[3]['sunrise'])).strftime(EN[5])"		|""	|2|0|0|0

# current/daily -> sunset
5012|0|"(EN[3] in (1,3))"			|"__import__('datetime').datetime.fromtimestamp(int(SN[3]['sunset'])).strftime(EN[5])"		|""	|3|0|0|0

# current/hourly -> temp // Temperature. Units - default: kelvin, metric: Celsius, imperial: Fahrenheit.
5012|0|"(EN[3] in (1,2))"			|"float(SN[3]['temp'])"										|""	|4|0|0|0 

# current/hourly -> feels_like // Temperature. This temperature parameter accounts for the human perception of weather. Units – default: kelvin, metric: Celsius, imperial: Fahrenheit. 
5012|0|"(EN[3] in (1,2))"			|"float(SN[3]['feels_like'])"									|""	|5|0|0|0

# pressure // Atmospheric pressure on the sea level, hPa
5012|0|"(EN[3] in (1,2,3))"			|"int(SN[3]['pressure'])"									|""	|6|0|0|0

# humidity // Humidity, %
5012|0|"(EN[3] in (1,2,3))"			|"int(SN[3]['humidity'])"									|""	|7|0|0|0

# dew_point // Atmospheric temperature (varying according to pressure and humidity) below which water droplets begin to condense and dew can form. Units – default: kelvin, metric: Celsius, imperial: Fahrenheit
5012|0|"(EN[3] in (1,2,3))"			|"float(SN[3]['dew_point'])"									|""	|8|0|0|0

# uvi //  Current UV index. 
5012|0|"(EN[3] in (1,2,3))"			|"float(SN[3]['uvi'])"										|""	|9|0|0|0

# clouds //  Cloudiness, %
5012|0|"(EN[3] in (1,2,3))"			|"int(SN[3]['clouds'])"										|""	|10|0|0|0

# current/hourly -> visibility // Average visibility, metres. The maximum value of the visibility is 10 km
5012|0|"(EN[3] in (1,2))"			|"int(SN[3]['visibility'])"									|""	|11|0|0|0

# wind_speed // Wind speed. Wind speed. Units – default: metre/sec, metric: metre/sec, imperial: miles/hour.
5012|0|"(EN[3] in (1,2,3))"			|"float(SN[3]['wind_speed'])"									|""	|12|0|0|0

# wind_deg // Wind direction, degrees (meteorological)
5012|0|"(EN[3] in (1,2,3))"			|"float(SN[3]['wind_deg'])"									|""	|13|0|0|0

# wind_gust // Wind gust. Units – default: metre/sec, metric: metre/sec, imperial: miles/hour.
5012|0|"(EN[3] in (1,2,3))"			|"float(SN[3]['wind_gust'])"									|""    	|14|0|0|0

# weather-ID // Weather condition id
5012|0|"(EN[3] in (1,2,3))"			|"int(SN[3]['weather'][0]['id'])"								|""	|15|0|0|0

# weather-main // Group of weather parameters (Rain, Snow etc.) 
5012|0|"(EN[3] in (1,2,3))"			|"SN[3]['weather'][0]['main']"									|""	|16|0|0|0

# weather-descr // Weather condition within the group // In der Description werden verschiedene Zeichen ersetzt - > siehe unten
5012|0|"(EN[3] in (1,2,3))"			|"SN[3]['weather'][0]['description']"								|""	|17|0|7|0

# weather-icon
5012|0|"(EN[3] in (1,2,3))"			|"SN[3]['weather'][0]['icon']"									|""	|18|0|0|0

# pop
5012|0|"(EN[3] in (2,3))"			|"float(SN[3]['pop']) * 100"									|""	|19|0|0|0

# daily -> moonrise
5012|0|"(EN[3]==3)"				|"__import__('datetime').datetime.fromtimestamp(int(SN[3]['moonrise'])).strftime(EN[5])"	|""	|20|0|0|0

# daily -> moonset
5012|0|"(EN[3]==3)"				|"__import__('datetime').datetime.fromtimestamp(int(SN[3]['moonset'])).strftime(EN[5])"		|""	|21|0|0|0

# daily -> moon_phase
5012|0|"(EN[3]==3)"				|"float(SN[3]['moon_phase'])"									|""	|22|0|0|0

# daily -> temp_morn
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['morn'])"									|""	|23|0|0|0

# daily -> temp_day 
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['day'])"									|""	|24|0|0|0

# daily -> temp_eve
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['eve'])"									|""	|25|0|0|0

# daily -> temp_night
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['night'])"								|""	|26|0|0|0

# daily -> temp_min
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['min'])"									|""	|27|0|0|0

# daily -> temp_max
5012|0|"(EN[3]==3)"				|"float(SN[3]['temp']['max'])"									|""	|28|0|0|0

# daily -> feels_like_morn
5012|0|"(EN[3]==3)"				|"float(SN[3]['feels_like']['morn'])"								|""	|29|0|0|0

# daily -> feels_like_day
5012|0|"(EN[3]==3)"				|"float(SN[3]['feels_like']['day'])"								|""	|30|0|0|0  

# daily -> feels_like_eve
5012|0|"(EN[3]==3)"				|"float(SN[3]['feels_like']['eve'])"								|""	|31|0|0|0

# daily -> feels_like_night
5012|0|"(EN[3]==3)"				|"float(SN[3]['feels_like']['night'])"								|""	|32|0|0|0

# rain // Precipitation, mm/h. Please note that only mm/h as units of measurement are available for this parameter 
5012|0|"(EN[3] in (1,2))"			|"float(SN[3]['rain']['1h']) if 'rain' in SN[3] else 0"						|""    |33|0|0|0
5012|0|"(EN[3]==3)"				|"float(SN[3]['rain']) if 'rain' in SN[3] else 0"						|""    |33|0|0|0

# snow // Precipitation, mm/h. Please note that only mm/h as units of measurement are available for this parameter 
5012|0|"(EN[3] in (1,2))"			|"float(SN[3]['snow']['1h']) if 'snow' in SN[3] else 0"						|""    |34|0|0|0
5012|0|"(EN[3]==3)"				|"float(SN[3]['snow']) if 'snow' in SN[3] else 0"						|""    |34|0|0|0

